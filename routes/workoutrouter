const express = require('express');
const router = express.Router();
const workoutList = require('../data/workoutlist')
const workoutSummary = require('../data/workoutsummary');
const firestoreDB = require('../init');
const workoutCollection = firestoreDB.collection("workouts")

// get all workouts.
router.get('/allWorkouts', (req, resp) => {
    resp.setHeader("Content-Type", "application/json")
    resp.status(200).json(workoutList)
})

// get add workout data
router.post('/addWorkout', async function(req, resp) {
    console.log("Adding workout...")
    if(!req.body.userId) {
        resp.status(400).json({"is_success": false, "message":"userId is not defined."});
        return
    }
    const allWorkouts = req.body.setData
    console.log("Set count: " + allWorkouts.length)
    let totalSetCount = 0
    let totalWtInKg = 0
    for(let i = 0; i < allWorkouts.length; i++) {
        let setInfo = allWorkouts[i]
         totalSetCount = totalSetCount + setInfo.sets.length
         for(let j = 0; j < setInfo.sets.length; j++) {
            let setItem = setInfo.sets[j]
            totalWtInKg = totalWtInKg + setItem.weight_in_kg
         }
    }
    workoutSummary.summary.title = "Total " + totalSetCount + " sets"
    workoutSummary.summary.sub_title = "Total " + allWorkouts.length + " exercises" 
    workoutSummary.summary.duration_info.value = req.body.duration
    workoutSummary.summary.volume_info.value = totalWtInKg + " kg"
    workoutSummary.summary.set_info.value = totalSetCount + ""
    try {
        // await newWorkoutData.save();
        resp.setHeader("Content-Type", "application/json")
        const response = await workoutCollection.add(workoutSummary)
        response.get().then(snapShot => {
            let responseData = {"workoutId": snapShot.id, "data": snapShot.data()}
            console.log(responseData.data)
            resp.status(200).json({"success": true, "data": responseData});
        })
    } catch(err) {
        console.log(err)
        resp.status(400).json({"success": false, "message":"Error in saving workout"});
    }
})

// get workout summary.
router.get('/summary/:id', async function(req, resp) {
    console.log("Serving request for id: " + req.params.id)
    if(!req.params.id) {
        resp.status(400).json({"success": false, "message":"id is not defined."});
        return
    }
    const id = req.params.id
    resp.setHeader("Content-Type", "application/json")
    resp.status(200).json({"is_success": true, "data": workoutSummary})
})

module.exports = router;